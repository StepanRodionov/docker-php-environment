
log_format imgfilter '$remote_addr - - [$time_local] "$request" $status $bytes_sent $msec CACHE:$http_x_proxy_cache ($upstream_response_time)';

## proxy cache server
proxy_cache_path /var/cache/nginx/resized/ levels=1:2 keys_zone=images:10m inactive=24h max_size=500m;

server {
    server_name                 _;
    listen                      9002;

    log_not_found               off;
    access_log                  off;
    error_log /var/log/nginx/proxy_cache.error.log error;
    error_page 404 = /404.php;
    error_page 500 = /500.html;

    location ~ "^(?<image>.+)$" {
        proxy_pass http://localhost:9001$image;
        proxy_cache images;
        proxy_cache_valid 200 24h;
        proxy_cache_valid any 1m;
    }
    location / {
        # Nginx needs you to manually define DNS resolution when using
        # variables in proxy_pass. Creating this dummy location avoids that.
        # The error is: "no resolver defined to resolve localhost".
        proxy_pass http://localhost:9001/;
    }
}



## image filter server
server {
    server_name                 _;
    listen                      9001;

    root /srv/www/web;
    log_not_found               off;
    access_log                  /var/log/nginx/imgfilter.access.log   imgfilter;
    #access_log                  off;
    error_log                   /var/log/nginx/imgfilter.error.log info;
    error_page                  415 =200 /empty;

    image_filter_interlace      on;
    image_filter_jpeg_quality   75;
    image_filter_buffer         15M;

    #Resize
    location ~ "^/resize/(?<width>[\d]+|-)x(?<height>[\d]+|-)/(?<image>.+)$" {
        alias           /srv/www/web/$image;
        image_filter    resize $width $height;
    }

    #Crop
    location ~ "^/crop/(?<width>[\d]+|-)x(?<height>[\d]+|-)/(?<image>.+)$" {
        alias           /srv/www/web/$image;
        image_filter    crop $width $height;
    }

    #Rotate
    location ~ "^/rotate/(?<angle>90|180|270)/(?<image>.+)$" {
        alias           /srv/www/web/$image;
        image_filter    rotate $angle;
    }

    #Size
    location ~ "^/size/(?<image>.+)$" {
        alias           /srv/www/web/$image;
        try_files       $uri @local_imgfilter;
        image_filter    size;
    }

    #TODO Починить отдачу пустой картинки вместо 415
    location = /empty { empty_gif; }

    location @local_imgfilter {
        proxy_pass http://localhost:9001;
    }

}